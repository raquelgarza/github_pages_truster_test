<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on trusTEr</title>
    <link>https://raquelgarza.github.io/github_pages_truster_test/post/</link>
    <description>Recent content in Posts on trusTEr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2023. All rights reserved.</copyright>
    <lastBuildDate>Tue, 31 Jan 2023 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://raquelgarza.github.io/github_pages_truster_test/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction</title>
      <link>https://raquelgarza.github.io/github_pages_truster_test/post/creating-a-new-theme/</link>
      <pubDate>Tue, 31 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://raquelgarza.github.io/github_pages_truster_test/post/creating-a-new-theme/</guid>
      <description>trusTEr - A trusting TE cluster analysis Version 0.1.1, written in Python 3.6.6
Takes fastq files from 10x single cell RNA sequencing, clusters cells using Seurat, and can be used to produce read count matrices in a cluster level. You can also quantify reads per cluster having predefined clusters.
Requirements TrusTEr depends on several external software. We provide a Docker container and a conda environment for a quick-start.
TrusTEr requires:</description>
    </item>
    
    <item>
      <title>Workflow</title>
      <link>https://raquelgarza.github.io/github_pages_truster_test/post/migrate-from-jekyll/</link>
      <pubDate>Tue, 31 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://raquelgarza.github.io/github_pages_truster_test/post/migrate-from-jekyll/</guid>
      <description>Let&amp;rsquo;s begin with a simple example. Let&amp;rsquo;s say you have two samples of the same tissue, they were sequenced in the same sequencing run and you want to get transposon expression per cell type found in the tissue.
data │ └───sample1 │ │ sample1Name_L001_I1_001.fastq.gz │ │ sample1Name_L001_R1_001.fastq.gz │ │ sample1Name_L001_R2_001.fastq.gz │ │ sample1Name_L002_I1_001.fastq.gz │ │ sample1Name_L002_R1_001.fastq.gz │ └─ sample1Name_L002_R2_001.fastq.gz └───sample2 │ sample2Name_L001_I1_001.fastq.gz │ sample2Name_L001_R1_001.fastq.gz │ sample2Name_L001_R2_001.fastq.gz │ sample2Name_L002_I1_001.fastq.gz │ sample2Name_L002_R1_001.fastq.gz └─ sample2Name_L002_R2_001.</description>
    </item>
    
  </channel>
</rss>